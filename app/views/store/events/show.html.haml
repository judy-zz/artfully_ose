:javascript
  $(document).ready(function(){

    // show/hide extended event descriptions
    $('.truncated a.toggle, .not-truncated a.toggle').click(function(e) {
      $(this).parents('.toggle-truncated').find('.truncated, .not-truncated').toggle();
      return false;
    })

    // toggle a showing's sections
    $('.title').click(function() {
      $(this).siblings('.sections').slideToggle();
      $(this).toggleClass('active');
    })

    // display the first showing's sections
    $('.title').first().siblings('.sections').slideToggle();
    $('.title').first().addClass('active');

    // when calendar is clicked
    $('td.show').click(function() {
      $("ul#shows li").hide();
      var date = $(this).attr('data-date');
      $("ul#shows li[data-date='" + date + "']").show();
      $("ul#shows li[data-date='" + date + "'] .title").addClass('active');
      $("ul#shows li[data-date='" + date + "'] .sections").show();
    });

    // click "add to cart" button on tickets
    $('.add-tickets-to-cart').submit(function(e) {
      e.preventDefault();
      $('#shopping-cart #steps').slideDown(); // not sure why this isn't slideUp

      params = {
        sectionId:   $(this).find('#section_id').val(),
        sectionName: $(this).find('#section_name').val(),
        ticketCount: parseInt($(this).find('#ticket_count').val()),
        ticketPrice: parseFloat($(this).find('#ticket_price').val()),
        showingName: $(this).find('#showing_name').val()
      }

      addItemToCart('ticket', params);
    });

    // click "make donation" button on donation
    $('.add-donation-to-cart').submit(function(e) {
      e.preventDefault();
      donationAmount = $(this).find('#donation_amount').asNumber();
      if (donationAmount > 0) {
        $('#shopping-cart #steps').slideDown(); // not sure why this isn't slideUp
        addItemToCart('donation', { donationAmount: donationAmount}); 
      }
    });

    // show shopping cart when clicked
    $('#shopping-cart-controls').click(function() {
      $('#shopping-cart #steps').slideToggle();
    })

    // add * to required field labels
    $('label.required').append('&nbsp;<strong>*</strong>&nbsp;');

    // switch shopping cart tabs
    $('[data-toggle="tab"]').click(function(e) {
      e.preventDefault();
      currentSectionId = $('li.active a').attr('href');

      // validate section before switching tabs
      if (validateSection(currentSectionId)) {
        newHref = $(this).attr('href');
        $('#nav li').removeClass('active');
        $('li a[href="' + newHref + '"]').parent('li').addClass('active');
        switchTabs(newHref);
      };
      // else, dont switch
      // errors will be shown
    });

    // click "remove" on a cart item
    $(document).on('click', 'td.remove a', function(e) {
      e.preventDefault();
      $(this).parents('tr').remove();
      updateServiceCharge();
      updateTotal();
      $('.formatCurrency').formatCurrency();
    })

    // change drop down on tickets in cart
    $(document).on('change', '#cart #ticket_count', function(e) {
      ticketCount = parseInt($(this).val());
      $(this).parent('td').attr('data-quantity', ticketCount);
      subTotal = parseFloat($(this).parent('td').attr('data-unit-price')) * ticketCount;
      $(this).parents('tr').find('td.price').attr('data-price', subTotal);
      $(this).parents('tr').find('td.price h5').text(subTotal);
      updateServiceCharge();
      updateTotal();
      $('.formatCurrency').formatCurrency();
    });
  });

  function switchTabs(newSectionId) {
    $('.tab-pane').hide();
    $(newSectionId+'.tab-pane').show();
  }

  // validate fields inside a shopping cart tab
  // return true if everything valid, false otherwise
  // add error classes and labels if its invalid
  function validateSection(sectionId) {
    var everythingValid = true;
    $(sectionId + ' input.required').each(function() {
      v = $('#shopping-cart-form').validate().element("#" + $(this).attr('id'));
      if (!(v)) {everythingValid = false};
    });
    return everythingValid;
  }

  function addItemToCart(type, params) {
    if (type === 'ticket') {
      // if exisiting line item for this secion, dont add it again
      if (!($("[data-section-id='" + params.sectionId + "']").size() > 0)) {
        createTicketLineItem(params); 
      }

      updateServiceCharge();
      
    } else if (type === 'donation') {
      createOrUpdateDonationLineItem(params);
    }

    updateTotal();
    $('.formatCurrency').formatCurrency();
  }

  function createTicketLineItem(params) {
    $('#cart table').prepend(
      "<tr class='ticket' data-section-id='" + params.sectionId + "'>" +
        "<td class='remove'><a href='#'>remove</a></td>" +
        "<td class='details'>" +
          "<h5>" + params.sectionName + " ticket</h5>" +
          "#{@event.name}<br />" +
          params.showingName +
        "</td>" +
        "<td class='quantity' data-quantity='" + params.ticketCount + "' data-unit-price='" + params.ticketPrice + "'>" +
          "#{escape_javascript(select_tag :ticket_count, options_for_select((1..10).to_a.map {|i| [pluralize(i, 'Ticket'), i]}))}" +
          "<br /><span class='formatCurrency'>" + params.ticketPrice + "</span> each" +
        "</td>" +
        "<td class='price' data-price='" + (params.ticketPrice * params.ticketCount) + "'>" + 
          "<h5 class='formatCurrency'>" +
            (params.ticketPrice * params.ticketCount) +
          "</h5>" + 
        "</td>" +
      "</tr>"
    );

    $("[data-section-id='" + params.sectionId + "'] #ticket_count").val(params.ticketCount);
  };

  function createOrUpdateDonationLineItem(params) {
    $('#cart table tr.donation').remove();
    $('#cart table').prepend(
      "<tr class='donation'>" +
        "<td class='remove'><a href='#'>remove</a></td>" +
        "<td class='details'><h5>Donation</h5></td>" +
        "<td class='quantity'></td>" +
        "<td class='price' data-price='" + params.donationAmount + "'>" + 
          "<h5 class='formatCurrency'>" + params.donationAmount + "</h5>" + 
        "</td>" +
      "</tr>"
    );
  }

  function updateServiceCharge() {
    quantity = 0;
    $('tr.ticket').each(function() {
      quantity += parseInt($(this).find('td.quantity').attr('data-quantity'));
    });

    if (quantity > 0) {
      $('tr#service-charge').show();
      $('tr#service-charge td.quantity span').text(quantity);
      $('tr#service-charge td.price h5').html(quantity * 2.00);
      $('tr#service-charge td.price').attr('data-price', (quantity * 2.00));
    } else {
      $('tr#service-charge td.price').attr('data-price', 0);
      $('tr#service-charge').hide();
    }
  }

  function updateTotal() {
    total = 0;
    $('[data-price]').each(function() {
      total += parseFloat($(this).attr('data-price'));
    });
    $('.continue #cart-total').html(total);
  }
#content
  #store
    #artfully-alert.flash.error
    #event
      = image_tag('storefront/logo.png', :id => 'logo')
      %h1#logo= @event.name
      %h3#producer= @event.producer

      - @use_calendar = (@event.shows.unplayed.length > 5 || params[:calendar] == 'true')

      %ul#shows
        =render :partial => 'show', :collection => @event.shows.unplayed, :as => :show
      
      =render 'calendar' if @use_calendar
    
  #sidebar
    - unless @event.description.blank?
      #description
        %h2 About
        =image_tag('storefront/event-image-default.jpg', :width => 140, :height => 140) if true #event.image?
        -if @event.description.length > 300
          .toggle-truncated
            .truncated
              = simple_format "#{truncate(@event.description, :length => 300)} (#{link_to 'more','#', :class => 'toggle'})"
            .not-truncated{:style => 'display:none;'}
              =simple_format "#{@event.description} (#{link_to 'less','#', :class => 'toggle'})"
        - else
          =simple_format @event.description
    %h2 Venue
    #venue
      =link_to image_tag("http://maps.google.com/maps/api/staticmap?size=140x140&maptype=roadmap&markers=color:red|#{@event.venue.address_as_url_query}&sensor=false&zoom=15"), "http://maps.google.com/maps?q=#{@event.venue.address_as_url_query.html_safe}&z=15"
      %div
        %strong=@event.venue.name
      %div=@event.venue.street_as_string
      %div=@event.venue.city_state_zip_as_string
    - unless @event.contact_email.blank? && @event.contact_phone.blank?
      %h2 Contact
      #contact
        - unless @event.contact_email.blank?
          = mail_to @event.contact_email
          <br />
        - unless @event.contact_phone.blank?
          = @event.contact_phone
    - if @event.organization.can?(:receive, Donation)
      #donation
        %h2 Donate
        %p Help support the show by adding a donation to your order! Contributions are tax-deductible to the extent permitted by law.
        = form_tag '', :class => 'add-donation-to-cart' do
          = text_field_tag :donation_amount, '$', :class => 'input_small'
          = submit_tag 'Donate Now'

#shopping-cart.shown
  #shopping-cart-controls
    %span.cart-name Shopping Cart
  = form_tag 'yo', :id => 'shopping-cart-form' do
    #steps
      %ul#nav
        %li.active= link_to 'Cart', '#cart', 'data-toggle' => 'tab'
        %li= link_to 'Contact Info', '#contact-info', 'data-toggle' => 'tab'
        %li= link_to 'Payment Details', '#payment-details', 'data-toggle' => 'tab'
        %li= link_to 'Billing Address', '#billing-address', 'data-toggle' => 'tab'
        %li= link_to 'Purchase', '#purchase', 'data-toggle' => 'tab'
      .tab-pane#cart{:style => 'display:block;'}
        %table

          %tr#service-charge{:style => 'display:none'}
            %td
            %td.details
              Service Charge
            %td.quantity
              %span
              x $2.00 per ticket
            %td.price
              %h5.formatCurrency

        .continue
          = link_to 'Checkout Now', '#contact-info', 'data-toggle' => 'tab'
          %h4#cart-total.formatCurrency

      .tab-pane#contact-info
        %fieldset
          %ul
            %li
              .label= label_tag :first_name, "First Name", :class => 'required'
              .element= text_field_tag :first_name, nil, :class => 'required'
            %li
              .label= label_tag :last_name, "Last Name", :class => 'required'
              .element= text_field_tag :last_name, nil, :class => 'required'
            %li
              .label= label_tag :email, "Email", :class => 'required'
              .element= text_field_tag :email, nil, :class => 'required', :type => 'email'
            %li
              .label= label_tag :phone, "Phone", :class => 'required'
              .element= text_field_tag :phone, nil, :class => 'required'
        .continue
          = link_to 'Next »', '#payment-details', 'data-toggle' => 'tab'

      .tab-pane#payment-details
        %fieldset
          %ul
            %li
              .label= label_tag :cardholder, "Cardholder Name", :class => 'required'
              .element= text_field_tag :cardholder, nil, :class => 'required'
            %li
              .label= label_tag :card_number, "Card Number", :class => 'required'
              .element
                = text_field_tag :card_number, nil, :class => 'required', :type => 'creditcard'
                = image_tag 'storefront/lock.png'
            %li
              .label= label_tag :cvv, "CVV", :class => 'required'
              .element
                = text_field_tag :cvv, nil, :class => 'required small'
                = image_tag 'storefront/cvv.gif'
            %li
              .label= label_tag :expiration, "Expiration", :class => 'required'
              .element
                = select_tag 'month', options_for_select((1..12).map{|m| "%02d" % m}), :class => "small"
                #expiration-slash /
                = select_tag 'year', options_for_select(Date.today.year..Date.today.year+10), :class => "small"
        .continue
          = link_to 'Next »', '#billing-address', 'data-toggle' => 'tab'
      
      .tab-pane#billing-address
        %fieldset
          %ul
            %li
              .label= label_tag :billing_address, "Billing Address", :class => 'required'
              .element= text_field_tag :billing_address, nil, :class => 'required'
            %li
              .label= label_tag :city, "City", :class => 'required'
              .element= text_field_tag :city, nil, :class => 'required'
            %li
              .label= label_tag :state, "State", :class => 'required'
              .element= text_field_tag :state, nil, :class => 'required'
            %li
              .label= label_tag :postal_code, "Postal Code", :class => 'required'
              .element= text_field_tag :postal_code, nil, :class => 'required'
        .continue
          = link_to 'Next »', '#purchase', 'data-toggle' => 'tab'

      .tab-pane#purchase
        %fieldset
          %ul
            %li#agreement
              .label
                %label
                  = check_box_tag :agreement, 1, false, :validate => "required:true"
                  I have read, understand and accept the terms and conditions of the User Agreement below.
          
        #user_agreement
          = t("pages.user_agreement.content", :default => "")
        .continue
          = link_to_function 'Complete Purchase'