- dates = @event.shows.collect(&:datetime).map {|d| d.to_date}
- dates_by_month = dates.group_by {|d| d.strftime("%B %Y")}

:css
	.month {
		margin-bottom: 50px;
		float: left;
		margin-right: 50px;
	}

	.month h3 {
		font-weight: bold;
	}

	.month h3 span {
		font-weight: normal;
	}

	table.calendar {
		width: 210px;
	}

	table.calendar td {
		border: 1px solid #f3f3f3;
		color: #999;
		letter-spacing: 0;
		word-spacing: 0;
		width: 30px;
		height: 30px;
		text-align: center;
		font-size: 10px;
		font-family: Verdana, sans-serif;
		vertical-align: middle;
	}

	table.calendar td.filler {
		border: none;
	}

	table.calendar td.show.past {
		background: #999;
		color: #fff;
	}

	table.calendar td.show.upcoming {
		background: #2086a6;
		color: #fff;
	}

-dates_by_month.each do |month, dates|
	.month
		%h3
			= month
			%span (#{pluralize(dates.length, 'showing')})
		%table.calendar{:align => "center"}
			- (dates.first.beginning_of_month.to_date..dates.first.end_of_month.to_date).each do |date|
				= "<tr>".html_safe if date == dates.first.beginning_of_month.to_date || date.wday == 0
				= Array.new(date.wday, "<td class='filler'></td>").join('').html_safe if date == dates.first.beginning_of_month.to_date && dates.first.beginning_of_month.to_date.wday != 0
				- css = ''
				-	if dates.include?(date)
					- css += 'show' 
					- css += ' upcoming' if date > Date.yesterday
					- css += ' past' if date < Date.yesterday
				= "<td class='#{css}'>#{date.strftime('%e')}</td>".html_safe
				= "</tr>".html_safe if date.cwday == 6